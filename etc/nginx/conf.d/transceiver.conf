server {
    listen       8288 default_server;
    listen       [::]:8288 default_server;
    listen       8298 ssl;
    ssl_certificate      /etc/nginx/ssl/receiver_dev.pem;
    ssl_certificate_key  /etc/nginx/ssl/receiver_dev.key;
    server_name  transceiver;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    # hide server version to clients.
    server_tokens off;
    # sendfile
    client_max_body_size 20480M;

    root /opt/tvu/web;
    autoindex off;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Access-Control-Allow-Origin "*";

    include /opt/tvu/nginxconf/*.conf;
    include /opt/tvu/nginxconf/r*/*.conf;
    # proxy media files and hls streams.
    location / {
        root /data/file/nginx;
    }

    # home page
    location = / {
        index /index.html;
    }

    # home page
    location = /index.html {
        index  index.html;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# HTTPS server for MMA
#
server {
	#ssl                  on;
	ssl_certificate      /usr/local/openresty/nginx/conf/server.crt;
	ssl_certificate_key  /usr/local/openresty/nginx/conf/server.key;

	ssl_session_timeout  5m;

	ssl_protocols  SSLv2 TLSv1.2;
	ssl_ciphers  ALL:!aNULL:!ECDH:!eNULL:!ADH:!LOW:!EXPORT:!RC4:!DES:!3DES:+HIGH:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;
	listen       443 ssl;
	server_name  localhost;

	add_header 'Strict-Transport-Security' 'max-age=31536000';
	include /opt/tvu/nginxconf/MMAWhiteList/WhiteList.conf;

	location /mp4rec {
		alias /data/mp4tmp;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		chunked_transfer_encoding on;
	}
	
	location /rec {
		alias /data/www;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Content-Disposition' 'attachment';
		#autoindex on;
	}

	location /test {
		add_header 'Access-Control-Allow-Origin' '*' always;
		return 200;
	}

	location = /rversion {
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Content-Type' 'application/json' always;
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/r_version.lua;
	}
	
	location = /logo {
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Content-Type' 'application/json' always;
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/logo.lua;
	}

	location /healthcheck {
		resolver 127.0.0.1 ipv6=off;
		add_header 'Access-Control-Allow-Origin' '*' always;
		if ($request_method != POST) {
			return 403;
		}
		lua_code_cache off;
		content_by_lua_file /usr/local/openresty/nginx/conf/subrequest.lua;
	}

	location / {
		root   /usr/share/nginx;
		index  index.html index.htm;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
	}
}

server {
	#ssl                  on;
	ssl_certificate      /usr/local/openresty/nginx/conf/server.crt;
	ssl_certificate_key  /usr/local/openresty/nginx/conf/server.key;

	ssl_session_timeout  5m;

	ssl_protocols  SSLv2 TLSv1.2;
	ssl_ciphers  ALL:!aNULL:!ECDH:!eNULL:!ADH:!LOW:!EXPORT:!RC4:!DES:!3DES:+HIGH:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;
	listen       443 ssl;
	server_name  MMAR1.*;

	add_header 'Strict-Transport-Security' 'max-age=31536000';
	include /opt/tvu/nginxconf/MMAWhiteList/WhiteList.conf;

	location /mp4rec {
		alias /data/mp4tmp;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		chunked_transfer_encoding on;
	}
	
	location /rec {
		alias /data/www;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		add_header 'Content-Disposition' 'attachment';
		#autoindex on;
	}

	location /test {
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		return 200;
	}

	location = /rversion {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/r_version.lua;
	}
	
	location = /logo {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/logo.lua;
	}

	location /healthcheck {
		resolver 127.0.0.1 ipv6=off;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		if ($request_method != POST) {
			return 403;
		}
		lua_code_cache off;
		content_by_lua_file /usr/local/openresty/nginx/conf/subrequest.lua;
	}

	location / {
		root   /usr/share/nginx;
		index  index.html index.htm;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
	}
}

server {
	#ssl                  on;
	ssl_certificate      /usr/local/openresty/nginx/conf/server.crt;
	ssl_certificate_key  /usr/local/openresty/nginx/conf/server.key;

	ssl_session_timeout  5m;

	ssl_protocols  SSLv2 TLSv1.2;
	ssl_ciphers  ALL:!aNULL:!ECDH:!eNULL:!ADH:!LOW:!EXPORT:!RC4:!DES:!3DES:+HIGH:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;
	listen       443 ssl;
	server_name  MMAR2.*;

	add_header 'Strict-Transport-Security' 'max-age=31536000';
	include /opt/tvu/nginxconf/MMAWhiteList/WhiteList1.conf;

	location /mp4rec {
		alias /data/mp4tmp;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		chunked_transfer_encoding on;
	}
	
	location /rec {
		alias /data/www;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		add_header 'Content-Disposition' 'attachment';
		#autoindex on;
	}

	location /test {
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		return 200;
	}

	location = /rversion {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/r_version.lua;
	}
	
	location = /logo {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/logo.lua;
	}

	location /healthcheck {
		resolver 127.0.0.1 ipv6=off;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		if ($request_method != POST) {
			return 403;
		}
		lua_code_cache off;
		content_by_lua_file /usr/local/openresty/nginx/conf/subrequest.lua;
	}

	location / {
		root   /usr/share/nginx;
		index  index.html index.htm;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
	}
}

server {
	#ssl                  on;
	ssl_certificate      /usr/local/openresty/nginx/conf/server.crt;
	ssl_certificate_key  /usr/local/openresty/nginx/conf/server.key;

	ssl_session_timeout  5m;

	ssl_protocols  SSLv2 TLSv1.2;
	ssl_ciphers  ALL:!aNULL:!ECDH:!eNULL:!ADH:!LOW:!EXPORT:!RC4:!DES:!3DES:+HIGH:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;
	listen       443 ssl;
	server_name  MMAMD5R1.*;

	add_header 'Strict-Transport-Security' 'max-age=31536000';
	include /opt/tvu/nginxconf/MMAWhiteList/WhiteList.conf;

	location /mp4rec {
		alias /data/mp4tmp;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		chunked_transfer_encoding on;
	}
	
	location /rec {
		alias /data/www;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		add_header 'Content-Disposition' 'attachment';
		#autoindex on;
	}

	location /test {
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		return 200;
	}

	location = /rversion {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/r_version.lua;
	}
	
	location = /logo {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/logo.lua;
	}

	location /healthcheck {
		resolver 127.0.0.1 ipv6=off;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		if ($request_method != POST) {
			return 403;
		}
		lua_code_cache off;
		content_by_lua_file /usr/local/openresty/nginx/conf/subrequest.lua;
	}

	location / {
		root   /usr/share/nginx;
		index  index.html index.htm;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
	}
}

server {
	#ssl                  on;
	ssl_certificate      /usr/local/openresty/nginx/conf/server.crt;
	ssl_certificate_key  /usr/local/openresty/nginx/conf/server.key;

	ssl_session_timeout  5m;

	ssl_protocols  SSLv2 TLSv1.2;
	ssl_ciphers  ALL:!aNULL:!ECDH:!eNULL:!ADH:!LOW:!EXPORT:!RC4:!DES:!3DES:+HIGH:+SSLv2:+EXP;
	ssl_prefer_server_ciphers   on;
	listen       443 ssl;
	server_name  MMAMD5R2.*;

	add_header 'Strict-Transport-Security' 'max-age=31536000';
	include /opt/tvu/nginxconf/MMAWhiteList/WhiteList1.conf;

	location /mp4rec {
		alias /data/mp4tmp;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		chunked_transfer_encoding on;
	}
	
	location /rec {
		alias /data/www;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		add_header 'Content-Disposition' 'attachment';
		#autoindex on;
	}

	location /test {
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		return 200;
	}

	location = /rversion {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/r_version.lua;
	}
	
	location = /logo {
		add_header 'Content-Type' 'application/json' always;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		lua_code_cache on;
		access_by_lua_file /usr/local/openresty/nginx/conf/logo.lua;
	}

	location /healthcheck {
		resolver 127.0.0.1 ipv6=off;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
		if ($request_method != POST) {
			return 403;
		}
		lua_code_cache off;
		content_by_lua_file /usr/local/openresty/nginx/conf/subrequest.lua;
	}

	location / {
		root   /usr/share/nginx;
		index  index.html index.htm;
		#autoindex on;
		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header Access-Control-Allow-Headers '*';
		add_header Access-Control-Allow-Methods '*';
		add_header Access-Control-Allow-Credentials 'true';
		if ($request_method = 'OPTIONS') {
			return 204;
		}
	}
}